<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\packages\Wapiti.x64\build\wapiti.x64.props" Condition="Exists('..\..\packages\Wapiti.x64\build\wapiti.x64.props')" Label="Paket" />
  <Import Project="..\..\packages\xunit.runner.visualstudio\build\net20\xunit.runner.visualstudio.props" Condition="Exists('..\..\packages\xunit.runner.visualstudio\build\net20\xunit.runner.visualstudio.props')" />
  <Import Project="..\..\packages\IKVM.NativeBinaries.8.1.5721.0\build\IKVM.NativeBinaries.props" Condition="Exists('..\..\packages\IKVM.NativeBinaries.8.1.5721.0\build\IKVM.NativeBinaries.props')" />
  <Import Project="..\..\build\grobid.src.settings" />
  <PropertyGroup>
    <RootNamespace>Grobid.Test</RootNamespace>
    <AssemblyName>Grobid.Test</AssemblyName>
    <ProjectGuid>{B3704634-4D8C-4E18-9826-8FED25FF1FB5}</ProjectGuid>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <OutputType>Library</OutputType>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.DataAnnotations" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\build\GlobalAssemblyInfo.cs">
      <Link>GlobalAssemblyInfo.cs</Link>
    </Compile>
    <Compile Include="Feature\BlockStateFactoryTest.Block.cs" />
    <Compile Include="Feature\BlockStateFactoryTest.FontSize.cs" />
    <Compile Include="Feature\BlockStateFactoryTest.Font.cs" />
    <Compile Include="Feature\BlockStateFactoryTest.Line.cs" />
    <Compile Include="Feature\CountryCodesTest.cs" />
    <Compile Include="Feature\EmptyLexicon.cs" />
    <Compile Include="FeatureRow.SentenceTextJoinerTest.cs" />
    <Compile Include="FeatureRow.TextJoinerTest.cs" />
    <Compile Include="FeatureRowGrouperTest.cs" />
    <Compile Include="GrobidTest.cs" />
    <Compile Include="Entity\HeaderFactoryTest.cs" />
    <Compile Include="Scoring\DateParityTest.cs" />
    <Compile Include="Scoring\ModelScorerTest.cs" />
    <Compile Include="Tei\TeiFeatureMergeBatchTest.cs" />
    <Compile Include="Extensions.cs" />
    <Compile Include="ExtensionsTest.cs" />
    <Compile Include="FeatureRowTest.cs" />
    <Compile Include="Scoring\ModelStatTest.cs" />
    <Compile Include="Tei\TeiFeatureFormatterTest.cs" />
    <Compile Include="Tei\TeiFeatureMergeTest.cs" />
    <Compile Include="TokenAlignerTest.cs" />
    <Compile Include="Feature\FeatureExtractorTest.cs" />
    <Compile Include="HeaderFeatureVectorTest.cs" />
    <Compile Include="IntroductionFilterTest.cs" />
    <Compile Include="Feature\LexiconFactoryTest.cs" />
    <Compile Include="Feature\LexiconTest.cs" />
    <Compile Include="PdfBlockExtractorTest.cs" />
    <Compile Include="Sample.cs" />
    <Compile Include="Tei\TeiFeatureFactoryTest.cs" />
    <Compile Include="Wapiti\WapitiTest.cs" />
    <Compile Include="Wapiti\TrainerRowTest.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\src\Grobid.PdfToXml\Grobid.PdfToXml.csproj">
      <Project>{6DACE7CD-2466-4806-9D47-F8DF50233377}</Project>
      <Name>Grobid.PdfToXml</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Grobid\Grobid.csproj">
      <Project>{abb35f54-6f91-4972-b289-d15e3be1999f}</Project>
      <Name>Grobid</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="..\..\content\essence-linq.pdf">
      <Link>essence-linq.pdf</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <None Include="..\..\content\lexicon\wordforms\english-normalized.wf">
      <Link>content\lexicon\wordforms\english-normalized.wf</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\..\content\lexicon\wordforms\german-normalized.wf">
      <Link>content\lexicon\wordforms\german-normalized.wf</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\..\content\models\date\model.wapiti">
      <Link>content\models\date\model.wapiti</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\..\content\models\header\model.wapiti">
      <Link>content\models\header\model.wapiti</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="FeatureRowGrouperTest.ConsecutiveClassifications.approved.json" />
    <None Include="FeatureRowGrouperTest.DifferentClassifications.approved.json" />
    <None Include="FeatureRowGrouperTest.DifferentClassificationsWithoutStart.approved.json" />
    <None Include="FeatureRowGrouperTest.Simple.approved.json" />
    <None Include="GrobidTest.Test.approved.json" />
    <None Include="HeaderFeatureVectorTest.HeaderFeatureExtractionTest.approved.json" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="..\..\content\lexicon\names\firstnames.txt">
      <Link>content\lexicon\names\firstnames.txt</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="..\..\content\lexicon\names\lastnames.txt">
      <Link>content\lexicon\names\lastnames.txt</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <EmbeddedResource Include="content\official\date.txt" />
    <EmbeddedResource Include="content\official\date.labeled.txt" />
    <Content Include="GrobidTest.ExtractTest.approved.txt" />
    <Content Include="HeaderFeatureVectorTest.HeaderFeatureExtractionWapitiTest.approved.txt" />
    <Content Include="Scoring\DateParityTest.DateModelComparisonAgainstGrobid.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactory00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactory01.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryAbstract00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryAddress00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryAffiliation00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryAuthor00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryCopyright00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryCopyright01.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryDate00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryDate01.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryDedication00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryDegree00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryDegree01.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryEmail00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryEnTitle00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryGrant00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryIntro00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryIntro01.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryKeyword00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryNote00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryNote01.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryOther00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryPhone00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryPubNum00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryReference00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryReference01.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactorySubmission00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryTitle00.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryTitle01.approved.txt" />
    <Content Include="Tei\TeiFeatureFactoryTest.TeiFeatureFactoryWeb00.approved.txt" />
    <Content Include="Tei\TeiFeatureMergeTest.TeiFeatureMerge00.approved.txt" />
    <Content Include="Wapiti\WapitiTest.WapitiEndToEnd.approved.txt" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <PropertyGroup>
        <__paket__xunit_runner_visualstudio_props>net20\xunit.runner.visualstudio</__paket__xunit_runner_visualstudio_props>
      </PropertyGroup>
    </When>
  </Choose>
  <Import Project="..\..\packages\xunit.runner.visualstudio.2.2.0\build\$(__paket__xunit_runner_visualstudio_props).props" Condition="Exists('..\..\packages\xunit.runner.visualstudio.2.2.0\build\$(__paket__xunit_runner_visualstudio_props).props')" Label="Paket" />
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="ApprovalTests">
          <HintPath>..\..\packages\ApprovalTests\lib\net40\ApprovalTests.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="ApprovalUtilities">
          <HintPath>..\..\packages\ApprovalUtilities\lib\net45\ApprovalUtilities.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
        <Reference Include="ApprovalUtilities.Net45">
          <HintPath>..\..\packages\ApprovalUtilities\lib\net45\ApprovalUtilities.Net45.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="FluentAssertions">
          <HintPath>..\..\packages\FluentAssertions\lib\net45\FluentAssertions.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
        <Reference Include="FluentAssertions.Core">
          <HintPath>..\..\packages\FluentAssertions\lib\net45\FluentAssertions.Core.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="Newtonsoft.Json">
          <HintPath>..\..\packages\Newtonsoft.Json\lib\net45\Newtonsoft.Json.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="Wapiti">
          <HintPath>..\..\packages\Wapiti.x64\lib\net45\Wapiti.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="xunit.abstractions">
          <HintPath>..\..\packages\xunit.abstractions\lib\net35\xunit.abstractions.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="xunit.assert">
          <HintPath>..\..\packages\xunit.assert\lib\netstandard1.1\xunit.assert.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="xunit.core">
          <HintPath>..\..\packages\xunit.extensibility.core\lib\netstandard1.1\xunit.core.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="$(TargetFrameworkIdentifier) == '.NETFramework' And ($(TargetFrameworkVersion) == 'v4.6' Or $(TargetFrameworkVersion) == 'v4.6.1' Or $(TargetFrameworkVersion) == 'v4.6.2' Or $(TargetFrameworkVersion) == 'v4.6.3' Or $(TargetFrameworkVersion) == 'v4.7' Or $(TargetFrameworkVersion) == 'v5.0')">
      <ItemGroup>
        <Reference Include="xunit.execution.desktop">
          <HintPath>..\..\packages\xunit.extensibility.execution\lib\net452\xunit.execution.desktop.dll</HintPath>
          <Private>True</Private>
          <Paket>True</Paket>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
</Project>